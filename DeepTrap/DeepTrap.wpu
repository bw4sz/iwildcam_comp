#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('../train.py'): {45L: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('../train.py'): {}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'XJhyfDuUfSFS1sBEXYhXqlW2zq'\
        'uzgXJC',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'tabs only',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('Generator.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('Generator.py'),
                      'Generator')]},
        loc('callback.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('function def',
        loc('callback.py'),
        'create')]},
        loc('models/random.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('models/random.py'),
        'Model')]},
        loc('utils.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('utils.py'),
        'classes')]},
        loc('visualization.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('function def',
        loc('visualization.py'),
        'draw_annotation')]},
        loc('../train.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('../train.py'),
        'config')]},
        loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/pandas/core/generic.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/pandas/core/generic.py'),
                      'NDFrame')]},
        loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/pandas/core/internals/construction.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/pandas/core/internals/construction.py'),
                      'arrays_to_mgr')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.5351213282247764,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'scheduler',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'image_dict',
                                       'fReverse': False,
                                       'fSearchText': u'check',
                                       'fStartPos': 0,
                                       'fStyle': 'regex',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (loc('visualization.py'),
        20L,
        20L),
                       'attrib-starts': [],
                       'first-line': 606L,
                       'folded-linenos': [],
                       'history': {u'file:/Users/ben/Documents/iwildcam_comp/train.py': ['t'\
        'ype(order)\n',
        'list(order)\n',
        'order = list(training_dict.keys())\n',
        'order\n',
        'order[0:10]\n',
        'self.groups = [[order[x % len(order)] for x in range(i, i + self.co'\
        'nfig["batch_size"])] for i in range(0, len(order), self.config["bat'\
        'ch_size"])]\n',
        'generator.plot_image()\n',
        'generator.plot_image(i)\n',
        'generator.load_image(i)\n',
        'generator.training_dict[0]\n',
        'generator.training_dict[0]["file_path"]\n',
        'generator.plot_image(100)\n',
        'import os\n',
        'image_paths = glob.glob(os.path.join(self.config["train_data_path"]'\
        ',"*.jpg"))\n',
        'image_paths\n',
        'self.train_df[self.train_df.file_path.isin(image_paths)].shape\n',
        'self.train_df = self.train_df[self.train_df.file_path.isin(image_pa'\
        'ths)]\n',
        'self.train_df = self.train_df[self.train_df.file_path.isin(image_pa'\
        'ths)].reset_index(inplace=True)\n',
        'self.train_df.index\n',
        'self.train_df\n',
        'generator.check_images()\n',
        'generator.train_df\n',
        'generator.train_df.index\n',
        'generator.train_df.index.reset_index\n',
        'generator.train_df.index.reset_index()\n',
        'a=generator.train_df.reset_index()\n',
        'a.index\n',
        'a.index()\n',
        'a.index.values\n',
        'filename = self.training_dict[image_index]["file_path"]\n',
        'import numpy as mnp\n',
        'generator.plot_image(1)\n',
        'import numpy as np\n',
        'filename\n',
        'image\n',
        'generator = Generator(train_df, config)\n',
        'generator.plot_image(10)\n',
        'validation_generator.size()\n',
        'validation_generator.size\n',
        'validation_generator.data.shape\n',
        'validation_generator.data.shape[0]\n',
        'validation_generator.load_annotation(10)\n',
        'validation_generator.load_annotation(1)\n',
        'validation_generator.label_to_name(1)\n',
        'validation_generator.labels\n',
        'validation_generator.name_to_label\n',
        'validation_generator.name_to_label(1)\n',
        'validation_generator.name_to_label(2)\n',
        'classes\n',
        'visualization.plot_images(validation_generator, show=True)\n',
        'visualization.plot_images(validation_generator, predictions, n= 2)'\
        '\n',
        'self.training_dict\n',
        'self.data\n',
        'generator\n',
        'generator.data\n',
        'predictions is not None\n',
        'n\n',
        'test_df\n',
        'test_df.shape\n',
        'validation_generator = Generator(test_df, config)\n',
        'validation_generator\n',
        'validation_generator.data\n',
        'self.data.shape[0]\n',
        'self.data.shape[0] !== 0\n',
        '!self.data.shape[0] == 0\n',
        'self.data.shape[0] == !0\n',
        'self.data.shape[0] == 0\n',
        'self.data.shape[0] is 0\n',
        'self.data.shape[0] is not 0\n',
        'self.data.shape[0] != 0\n',
        'predictions\n',
        'visualization.plot_images(validation_generator, predictions=predict'\
        'ions, n= 2, annotations=False)\n',
        'plt.plot()\n',
        'visualization.plot_images(validation_generator, predictions=predict'\
        'ions, n= 2,annotations=False, show=True)\n',
        'predictions_label = [utils.classes[x] for x in predictions]\n',
        'visualization.plot_images(validation_generator, n= 2,annotations=Fa'\
        'lse, show=True)\n',
        'predictions_label\n',
        'predictions_label[0]\n',
        'predictions_label[1]\n',
        'visualization.plot_images(validation_generator, predictions=predict'\
        'ions_label, n= 2,annotations=False, show=True)\n',
        'visualization.plot_images(train_generator, n= 2,annotations=True, s'\
        'how=True)\n']},
                       'launch-id': None,
                       'sel-line': 622L,
                       'sel-line-start': 3029444L,
                       'selection_end': 3029444L,
                       'selection_start': 3029444L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {None: ['from PIL import Image\n']},
                       'launch-id': None,
                       'sel-line': 6L,
                       'sel-line-start': 381L,
                       'selection_end': 381L,
                       'selection_start': 381L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('visualization.py'),
        {'attrib-starts': [('plot_images',
                            7)],
         'first-line': 3L,
         'folded-linenos': [],
         'sel-line': 14L,
         'sel-line-start': 528L,
         'selection_end': 561L,
         'selection_start': 561L,
         'zoom': 0L},
        1556044426.488854],
        [loc('Generator.py'),
         {'attrib-starts': [('Generator',
                             12),
                            ('Generator.define_groups',
                             51)],
          'first-line': 47L,
          'folded-linenos': [],
          'sel-line': 55L,
          'sel-line-start': 1460L,
          'selection_end': 1479L,
          'selection_start': 1479L,
          'zoom': 0L},
         1556044428.102325],
        [loc('../train.py'),
         {'attrib-starts': [],
          'first-line': 33L,
          'folded-linenos': [],
          'sel-line': 33L,
          'sel-line-start': 986L,
          'selection_end': 1014L,
          'selection_start': 1014L,
          'zoom': 0L},
         1556044453.429725],
        [loc('Generator.py'),
         {'attrib-starts': [('Generator',
                             12),
                            ('Generator.__init__',
                             16)],
          'first-line': 31L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 778L,
          'selection_end': 792L,
          'selection_start': 787L,
          'zoom': 0L},
         1556044455.58504],
        [loc('Generator.py'),
         {'attrib-starts': [('Generator',
                             12),
                            ('Generator.check_images',
                             48)],
          'first-line': 44L,
          'folded-linenos': [],
          'sel-line': 51L,
          'sel-line-start': 1242L,
          'selection_end': 1242L,
          'selection_start': 1242L,
          'zoom': 0L},
         1556044579.083551],
        [loc('../train.py'),
         {'attrib-starts': [],
          'first-line': 16L,
          'folded-linenos': [],
          'sel-line': 24L,
          'sel-line-start': 812L,
          'selection_end': 812L,
          'selection_start': 812L,
          'zoom': 0L},
         1556044623.874075],
        [loc('Generator.py'),
         {'attrib-starts': [('Generator',
                             12),
                            ('Generator.__init__',
                             16)],
          'first-line': 39L,
          'folded-linenos': [],
          'sel-line': 28L,
          'sel-line-start': 566L,
          'selection_end': 600L,
          'selection_start': 591L,
          'zoom': 0L},
         1556044630.408669],
        [loc('../train.py'),
         {'attrib-starts': [],
          'first-line': 35L,
          'folded-linenos': [],
          'sel-line': 37L,
          'sel-line-start': 1129L,
          'selection_end': 1221L,
          'selection_start': 1221L,
          'zoom': 0L},
         1556044658.924546],
        [loc('Generator.py'),
         {'attrib-starts': [('Generator',
                             12),
                            ('Generator.check_images',
                             48)],
          'first-line': 44L,
          'folded-linenos': [],
          'sel-line': 52L,
          'sel-line-start': 1325L,
          'selection_end': 1361L,
          'selection_start': 1361L,
          'zoom': 0L},
         1556044804.786158],
        [loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/pandas/core/internals/construction.py'),
         {'attrib-starts': [('sanitize_index',
                             508)],
          'first-line': 506L,
          'folded-linenos': [],
          'sel-line': 518L,
          'sel-line-start': 17780L,
          'selection_end': 17780L,
          'selection_start': 17780L,
          'zoom': 0L},
         1556044811.983061],
        [loc('../train.py'),
         {'attrib-starts': [],
          'first-line': 34L,
          'folded-linenos': [],
          'sel-line': 44L,
          'sel-line-start': 1416L,
          'selection_end': 1429L,
          'selection_start': 1429L,
          'zoom': 0L},
         1556044901.114272],
        [loc('visualization.py'),
         {'attrib-starts': [('plot_images',
                             7)],
          'first-line': 25L,
          'folded-linenos': [],
          'sel-line': 31L,
          'sel-line-start': 1022L,
          'selection_end': 1044L,
          'selection_start': 1044L,
          'zoom': 0L},
         1556044927.720823],
        [loc('../train.py'),
         {'attrib-starts': [],
          'first-line': 32L,
          'folded-linenos': [],
          'sel-line': 43L,
          'sel-line-start': 1368L,
          'selection_end': 1451L,
          'selection_start': 1368L,
          'zoom': 0L},
         1556045087.549323],
        [loc('visualization.py'),
         {'attrib-starts': [('plot_images',
                             7)],
          'first-line': 14L,
          'folded-linenos': [],
          'sel-line': 25L,
          'sel-line-start': 845L,
          'selection_end': 881L,
          'selection_start': 870L,
          'zoom': 0L},
         1556045114.128263],
        [loc('utils.py'),
         {'attrib-starts': [],
          'first-line': 3L,
          'folded-linenos': [],
          'sel-line': 10L,
          'sel-line-start': 429L,
          'selection_end': 429L,
          'selection_start': 429L,
          'zoom': 0L},
         1556045115.257333],
        [loc('callback.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1556045115.860546],
        [loc('../train.py'),
         {'attrib-starts': [],
          'first-line': 35L,
          'folded-linenos': [],
          'sel-line': 43L,
          'sel-line-start': 1368L,
          'selection_end': 1445L,
          'selection_start': 1428L,
          'zoom': 0L},
         1556045191.701307],
        [loc('visualization.py'),
         {'attrib-starts': [('plot_images',
                             7)],
          'first-line': 14L,
          'folded-linenos': [],
          'sel-line': 26L,
          'sel-line-start': 885L,
          'selection_end': 937L,
          'selection_start': 937L,
          'zoom': 0L},
         1556045226.056573],
        [loc('../train.py'),
         {'attrib-starts': [],
          'first-line': 12L,
          'folded-linenos': [],
          'sel-line': 24L,
          'sel-line-start': 812L,
          'selection_end': 901L,
          'selection_start': 901L,
          'zoom': 0L},
         1556045283.818428],
        [loc('visualization.py'),
         {'attrib-starts': [('plot_images',
                             7)],
          'first-line': 16L,
          'folded-linenos': [],
          'sel-line': 24L,
          'sel-line-start': 837L,
          'selection_end': 896L,
          'selection_start': 896L,
          'zoom': 0L},
         1556045360.412777]],
        20),
        'current-loc': loc('../train.py'),
        'editor-state-list': [(loc('visualization.py'),
                               {'attrib-starts': [('plot_images',
        7)],
                                'first-line': 16L,
                                'folded-linenos': [],
                                'sel-line': 24L,
                                'sel-line-start': 837L,
                                'selection_end': 896L,
                                'selection_start': 896L,
                                'zoom': 0L}),
                              (loc('utils.py'),
                               {'attrib-starts': [],
                                'first-line': 3L,
                                'folded-linenos': [],
                                'sel-line': 10L,
                                'sel-line-start': 429L,
                                'selection_end': 429L,
                                'selection_start': 429L,
                                'zoom': 0L}),
                              (loc('callback.py'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('../train.py'),
                               {'attrib-starts': [],
                                'first-line': 12L,
                                'folded-linenos': [],
                                'sel-line': 24L,
                                'sel-line-start': 812L,
                                'selection_end': 901L,
                                'selection_start': 901L,
                                'zoom': 0L}),
                              (loc('Generator.py'),
                               {'attrib-starts': [('Generator',
        12),
        ('Generator.check_images',
         48)],
                                'first-line': 44L,
                                'folded-linenos': [],
                                'sel-line': 52L,
                                'sel-line-start': 1325L,
                                'selection_end': 1361L,
                                'selection_start': 1361L,
                                'zoom': 0L}),
                              (loc('models/random.py'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 42L,
                                'selection_start': 42L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('visualization.py'),
         loc('utils.py'),
         loc('callback.py'),
         loc('../train.py'),
         loc('Generator.py'),
         loc('models/random.py')]),
                               'open_files': [u'models/random.py',
        u'Generator.py',
        u'utils.py',
        u'callback.py',
        u'visualization.py',
        u'../train.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (10,
                         23,
                         1365,
                         877)}]}
guimgr.recent-documents = [loc('../train.py'),
                           loc('visualization.py'),
                           loc('callback.py'),
                           loc('utils.py'),
                           loc('Generator.py'),
                           loc('models/random.py')]
proj.pyexec = {None: ('custom',
                      u'/Users/ben/miniconda3/envs/DeepTrap/bin/python')}
search.replace-history = [u'image_dict',
                          u'data']
search.search-history = [u'check',
                         u'training_dict',
                         u'\\n',
                         u'train_df']
testing.stored-results = (1,
                          [],
                          {})
