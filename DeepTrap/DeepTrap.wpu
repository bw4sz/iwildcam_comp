#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('Generator.py'): {166L: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('../train.py'): {}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'XJhyfDuUfSFS1sBEXYhXqlW2zq'\
        'uzgXJC',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'tabs only',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../DeepLidar/train.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../DeepLidar/train.py'),
                      'args')]},
        loc('Generator.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('class def',
        loc('Generator.py'),
        'Generator')]},
        loc('callback.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('function def',
        loc('callback.py'),
        'create')]},
        loc('models/random.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('models/random.py'),
        'Model')]},
        loc('models/resnet.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('models/resnet.py'),
        'Model')]},
        loc('preprocess.py'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': None},
        loc('utils.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('utils.py'),
        'classes')]},
        loc('visualization.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('function def',
        loc('visualization.py'),
        'draw_annotation')]},
        loc('../config.yaml'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': None},
        loc('../train.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('../train.py'),
        'config')]},
        loc('../../keras-retinanet/keras_retinanet/preprocessing/generator.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../keras-retinanet/keras_retinanet/preprocessing/generator.py'),
                      'Generator')]},
        loc('../../keras-retinanet/keras_retinanet/utils/image.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../keras-retinanet/keras_retinanet/utils/image.py'),
                      'adjust_transform_for_image')]},
        loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/multiprocessing/pool.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/multiprocessing/pool.py'),
                      'ApplyResult')]},
        loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/posixpath.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/posixpath.py'),
                      'abspath')]},
        loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/keras/engine/training.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/keras/engine/training.py'),
                      'Model')]},
        loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/keras/engine/training_generator.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/keras/engine/training_generator.py'),
                      'evaluate_generator')]},
        loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/keras/engine/training_utils.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/keras/engine/training_utils.py'),
                      'batch_shuffle')]},
        loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/keras/legacy/interfaces.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/keras/legacy/interfaces.py'),
                      'add_weight_args_preprocessing')]},
        loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/keras/utils/data_utils.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/keras/utils/data_utils.py'),
                      'GeneratorEnqueuer')]},
        loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/numpy/core/shape_base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/numpy/core/shape_base.py'),
                      'array_function_dispatch')]},
        loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/pandas/core/generic.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/pandas/core/generic.py'),
                      'NDFrame')]},
        loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/pandas/core/groupby/groupby.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/pandas/core/groupby/groupby.py'),
                      'GroupBy')]},
        loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/pandas/core/groupby/grouper.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/pandas/core/groupby/grouper.py'),
                      'Grouper')]},
        loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/pandas/core/internals/construction.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/pandas/core/internals/construction.py'),
                      'arrays_to_mgr')]},
        loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/threading.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/threading.py'),
                      'activeCount')]},
        loc('unknown:untitled-1.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.5147247119078104,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'scheduler',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'image_dict',
                                       'fReverse': False,
                                       'fSearchText': u'categorical',
                                       'fStartPos': 0,
                                       'fStyle': 'regex',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (loc('visualization.py'),
        20L,
        20L),
                       'attrib-starts': [],
                       'first-line': 2826L,
                       'folded-linenos': [],
                       'history': {u'file:/Users/ben/Documents/iwildcam_comp/train.py': ['t'\
        'rain_df\n',
        'train_df.columns\n',
        'train_df.location.unique\n',
        'train_df.location.groupby("location")\n',
        'train_df.groupby("location")\n',
        'train_df.groupby("location").sample\n',
        'train_df.groupby("location").sample()\n',
        'train_df.groupby("location").unique()\n',
        'train_df.location.unique()\n',
        'train_df.location.unique().sample\n',
        'train_df.location.dropduplicates()\n',
        'train_df.location.drop_duplicates()\n',
        'train_df.location.drop_duplicates().sample\n',
        'train_df.location.drop_duplicates().shape\n',
        'train_df.location.drop_duplicates().sample(frac=0.85).shape\n',
        '138/117\n',
        '117/138\n',
        'train_df.location.drop_duplicates().sample(frac=0.85)\n',
        'training_locations = train_df.location.drop_duplicates().sample(fra'\
        'c=0.85)',
        'train_df[train_df.locations.isin(training_locations)]\n',
        'training_locations = train_df.location.drop_duplicates().sample(fra'\
        'c=0.85)\n',
        'train_df[train_df.location.isin(training_locations)]\n',
        'training_locations = train_df.location.drop_duplicates().sample(fra'\
        'c=0.85)    \ntraining_split = train_df[train_df.location.isin(train'\
        'ing_locations)]\nevaluation_split  = train_df[~ train_df.location.i'\
        'sin(training_locations)]\n\n',
        'evaluation_split.shape\n',
        'training_split.shape\n',
        'unique_locations = train_df.location.drop_duplicates()\n',
        'training_locations = train_df.location.drop_duplicates().head(n=int'\
        '(unique_locations.shape[0]*0.85))\n',
        'training_locations\n',
        'training_split = train_df[train_df.location.isin(training_locations'\
        ')]\n',
        'evaluation_split  = train_df[~ train_df.location.isin(training_loca'\
        'tions)]\n',
        'self.data.shape\n',
        'self.image_dir\n',
        'evaluation_split\n',
        'visualization.plot_images(train_generator, n= 5,annotations=True, s'\
        'how=True)\n',
        'annotation==1\n',
        'which(annotation==1)\n',
        'np.where(annotation==1)[0]\n',
        'annotation[0]\n',
        'annotation\n',
        'list(np.where(annotation==1))\n',
        'np.where(annotation==1)\n',
        'np.argmax(annotation)\n',
        'history = self.model.fit_generator(\n    generator=train_generator,'\
        '\n    steps_per_epoch=train_generator.size()/self.config["batch_siz'\
        'e"],\n    epochs=config["epochs"],\n    verbose=1,\n    weights=sel'\
        'f.download_imagenet(),\n    shuffle=False,\n    callbacks=callbacks'\
        ',\n)\n\n',
        'history = self.model.fit_generator(\n    generator=train_generator,'\
        '\n    steps_per_epoch=train_generator.size()/self.config["batch_siz'\
        'e"],\n    epochs=self.config["epochs"],\n    verbose=1,\n    weight'\
        's=self.download_imagenet(),\n    shuffle=False,\n    callbacks=call'\
        'backs,\n)\n\n',
        'imagenet_weights\n',
        'self.model.load_weights(imagenet_weights, by_name=True, skip_mismat'\
        'ch=skip_mismatch)\n',
        'self.model.load_weights(imagenet_weights, by_name=True, skip_mismat'\
        'ch=True)\n',
        'i\n',
        'uid\n',
        '_SHARED_SEQUENCES\n',
        'train_generator.__get_item()\n',
        'train_generator.__get_item__()\n',
        'train_generator.__getitem__()\n',
        'train_generator.__getitem__(1)\n',
        'train_generator.__getitem__(1).shape\n',
        'len(train_generator.__getitem__(1))\n',
        'names\n',
        'self.model\n',
        'model.plot\n',
        'model.plot()\n',
        'model\n',
        'model.model\n',
        'model.model.plot\n',
        'model.model.plot()\n',
        'model.model.summary\n',
        'model.model.summary()\n',
        'data[0]\n',
        'len(data[0].shape)\n',
        'data[0].shape\n',
        'data[1].shape\n',
        'image_group\n',
        'len(image_group)\n',
        'image_group[0]\n',
        'image_group[0].shape\n',
        'import numpy as np\n',
        'for i in range(len(image_group)):\n    # preprocess the image\n    '\
        'image = preprocess.preprocess_image(image_group[i])\n    # resize i'\
        'mage\n    image_group[i], _ = self.resize_image(image)\n\n',
        'len(data)\n',
        'len(data[0])\n',
        'data\n',
        'data.shape\n',
        'x\n',
        'x.shape\n',
        'import matplotlib.pyplot\n',
        'pyplot.imshow(x[0,:,:,:3])\n',
        'plt.imshow(x[0,:,:,:3])\n',
        'plt.show()\n',
        'plt.savefig("/Users/Ben/Desktop/test.png")\n',
        'image_group[i] = preprocess.resize_image(image, size=self.config["i'\
        'mage_size"])\n',
        'image_group[i]\n',
        'import matplotlib.pyplot as plt\n',
        'plt.imshow(image_group[i])\n',
        'annotations = self.load_annotations_group(group)\n',
        'annotations.shape\n',
        'len(annotations)\n',
        'np.array(annotations)\n',
        'np.array(annotations).shape\n',
        'np.stack(annotations)\n',
        'annotations\n',
        'annotations[0]\n',
        'annotations[1]\n']},
                       'launch-id': None,
                       'sel-line': 2840L,
                       'sel-line-start': 3129963L,
                       'selection_end': 3129987L,
                       'selection_start': 3129987L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 3249L,
                       'folded-linenos': [],
                       'history': {None: ['from PIL import Image\n',
        'import keras\n',
        '(training_x, training_y), (_, _) = keras.datasets.cifar10.load_data'\
        '()\n',
        'training_x\n',
        'training_x.shape\n',
        'training_y.shape\n',
        'training_y[0]\n',
        'training_y[3]\n',
        '(training_x, training_y), (_, _) = keras.datasets.cifar10.load_data'\
        '()',
        'training_y = keras.utils.np_utils.to_categorical(training_y)\n',
        'training_y\n']},
                       'launch-id': None,
                       'sel-line': 3267L,
                       'sel-line-start': 197532L,
                       'selection_end': 197532L,
                       'selection_start': 197532L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('../../keras-retinanet/keras_retinanet/utils/image.py'),
        {'attrib-starts': [('preprocess_image',
                            34)],
         'first-line': 29L,
         'folded-linenos': [],
         'sel-line': 34L,
         'sel-line-start': 922L,
         'selection_end': 1875L,
         'selection_start': 922L,
         'zoom': 0L},
        1556053483.456101],
        [loc('preprocess.py'),
         {'attrib-starts': [('resize_image',
                             5)],
          'first-line': 14L,
          'folded-linenos': [],
          'sel-line': 19L,
          'sel-line-start': 556L,
          'selection_end': 570L,
          'selection_start': 570L,
          'zoom': 0L},
         1556053674.758728],
        [loc('Generator.py'),
         {'attrib-starts': [('Generator',
                             13),
                            ('Generator.preprocess_group',
                             117)],
          'first-line': 118L,
          'folded-linenos': [],
          'sel-line': 124L,
          'sel-line-start': 3789L,
          'selection_end': 3793L,
          'selection_start': 3793L,
          'zoom': 0L},
         1556053764.750691],
        [loc('../train.py'),
         {'attrib-starts': [],
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 1417L,
          'selection_end': 1417L,
          'selection_start': 1417L,
          'zoom': 0L},
         1556053786.054805],
        [loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/keras/engine/training_utils.py'),
         {'attrib-starts': [('standardize_input_data',
                             31)],
          'first-line': 93L,
          'folded-linenos': [],
          'sel-line': 101L,
          'sel-line-start': 3631L,
          'selection_end': 3631L,
          'selection_start': 3631L,
          'zoom': 0L},
         1556053811.425852],
        [loc('../train.py'),
         {'attrib-starts': [],
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 1417L,
          'selection_end': 1417L,
          'selection_start': 1417L,
          'zoom': 0L},
         1556053813.507056],
        [loc('models/resnet.py'),
         {'attrib-starts': [('Model',
                             8),
                            ('Model.train',
                             49)],
          'first-line': 49L,
          'folded-linenos': [],
          'sel-line': 60L,
          'sel-line-start': 2142L,
          'selection_end': 2163L,
          'selection_start': 2163L,
          'zoom': 0L},
         1556053827.471437],
        [loc('../../keras-retinanet/keras_retinanet/preprocessing/generator.py'),
         {'attrib-starts': [('Generator',
                             38),
                            ('Generator.compute_input_output',
                             297)],
          'first-line': 294L,
          'folded-linenos': [],
          'sel-line': 302L,
          'sel-line-start': 12390L,
          'selection_end': 12439L,
          'selection_start': 12423L,
          'zoom': 0L},
         1556053830.627469],
        [loc('../../keras-retinanet/keras_retinanet/preprocessing/generator.py'),
         {'attrib-starts': [('Generator',
                             38),
                            ('Generator.load_annotations_group',
                             138)],
          'first-line': 133L,
          'folded-linenos': [],
          'sel-line': 141L,
          'sel-line-start': 5181L,
          'selection_end': 5271L,
          'selection_start': 5181L,
          'zoom': 0L},
         1556053838.242818],
        [loc('Generator.py'),
         {'attrib-starts': [('Generator',
                             13),
                            ('Generator.__getitem__',
                             150)],
          'first-line': 152L,
          'folded-linenos': [],
          'sel-line': 163L,
          'sel-line-start': 5209L,
          'selection_end': 5244L,
          'selection_start': 5236L,
          'zoom': 0L},
         1556053841.213439],
        [loc('Generator.py'),
         {'attrib-starts': [('Generator',
                             13),
                            ('Generator.__getitem__',
                             150)],
          'first-line': 141L,
          'folded-linenos': [],
          'sel-line': 154L,
          'sel-line-start': 4937L,
          'selection_end': 4945L,
          'selection_start': 4945L,
          'zoom': 0L},
         1556053872.919715],
        [loc('../train.py'),
         {'attrib-starts': [],
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 1417L,
          'selection_end': 1417L,
          'selection_start': 1417L,
          'zoom': 0L},
         1556053897.880719],
        [loc('Generator.py'),
         {'attrib-starts': [('Generator',
                             13),
                            ('Generator.__getitem__',
                             150)],
          'first-line': 149L,
          'folded-linenos': [],
          'sel-line': 163L,
          'sel-line-start': 5209L,
          'selection_end': 5266L,
          'selection_start': 5209L,
          'zoom': 0L},
         1556053920.521582],
        [loc('../../keras-retinanet/keras_retinanet/preprocessing/generator.py'),
         {'attrib-starts': [('Generator',
                             38),
                            ('Generator.load_annotations_group',
                             138)],
          'first-line': 135L,
          'folded-linenos': [],
          'sel-line': 138L,
          'sel-line-start': 5070L,
          'selection_end': 5100L,
          'selection_start': 5078L,
          'zoom': 0L},
         1556053926.113874],
        [loc('../../keras-retinanet/keras_retinanet/preprocessing/generator.py'),
         {'attrib-starts': [('Generator',
                             38),
                            ('Generator.compute_input_output',
                             297)],
          'first-line': 279L,
          'folded-linenos': [],
          'sel-line': 317L,
          'sel-line-start': 12987L,
          'selection_end': 13025L,
          'selection_start': 13010L,
          'zoom': 0L},
         1556053994.984775],
        [loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/numpy/core/shape_base.py'),
         {'attrib-starts': [('_block_check_depths_match',
                             433)],
          'first-line': 452L,
          'folded-linenos': [],
          'sel-line': 460L,
          'sel-line-start': 12992L,
          'selection_end': 13006L,
          'selection_start': 13004L,
          'zoom': 0L},
         1556054058.831754],
        [loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/numpy/core/shape_base.py'),
         {'attrib-starts': [('stack',
                             352)],
          'first-line': 410L,
          'folded-linenos': [],
          'sel-line': 415L,
          'sel-line-start': 11345L,
          'selection_end': 11377L,
          'selection_start': 11376L,
          'zoom': 0L},
         1556054060.238215],
        [loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/numpy/core/shape_base.py'),
         {'attrib-starts': [('block',
                             669)],
          'first-line': 673L,
          'folded-linenos': [],
          'sel-line': 684L,
          'sel-line-start': 21326L,
          'selection_end': 21340L,
          'selection_start': 21337L,
          'zoom': 0L},
         1556054064.395814],
        [loc('../train.py'),
         {'attrib-starts': [],
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 1417L,
          'selection_end': 1417L,
          'selection_start': 1417L,
          'zoom': 0L},
         1556054065.326127],
        [loc('Generator.py'),
         {'attrib-starts': [('Generator',
                             13),
                            ('Generator.load_annotation',
                             95)],
          'first-line': 93L,
          'folded-linenos': [],
          'sel-line': 101L,
          'sel-line-start': 2953L,
          'selection_end': 2981L,
          'selection_start': 2970L,
          'zoom': 0L},
         1556054068.533448]],
        20),
        'current-loc': loc('Generator.py'),
        'editor-state-list': [(loc('visualization.py'),
                               {'attrib-starts': [('plot_images',
        7)],
                                'first-line': 15L,
                                'folded-linenos': [],
                                'sel-line': 25L,
                                'sel-line-start': 898L,
                                'selection_end': 954L,
                                'selection_start': 954L,
                                'zoom': 0L}),
                              (loc('utils.py'),
                               {'attrib-starts': [('split_training',
        54)],
                                'first-line': 47L,
                                'folded-linenos': [],
                                'sel-line': 59L,
                                'sel-line-start': 2143L,
                                'selection_end': 2147L,
                                'selection_start': 2147L,
                                'zoom': 0L}),
                              (loc('callback.py'),
                               {'attrib-starts': [('Evaluate',
        3)],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 3L,
                                'sel-line-start': 25L,
                                'selection_end': 46L,
                                'selection_start': 46L,
                                'zoom': 0L}),
                              (loc('../train.py'),
                               {'attrib-starts': [],
                                'first-line': 27L,
                                'folded-linenos': [],
                                'sel-line': 38L,
                                'sel-line-start': 1417L,
                                'selection_end': 1417L,
                                'selection_start': 1417L,
                                'zoom': 0L}),
                              (loc('Generator.py'),
                               {'attrib-starts': [('Generator',
        13),
        ('Generator.load_annotations_group',
         106)],
                                'first-line': 104L,
                                'folded-linenos': [],
                                'sel-line': 109L,
                                'sel-line-start': 3257L,
                                'selection_end': 3312L,
                                'selection_start': 3312L,
                                'zoom': 0L}),
                              (loc('models/random.py'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 441L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('models/resnet.py'),
                               {'attrib-starts': [('Model',
        8),
        ('Model.train',
         49)],
                                'first-line': 49L,
                                'folded-linenos': [],
                                'sel-line': 60L,
                                'sel-line-start': 2142L,
                                'selection_end': 2163L,
                                'selection_start': 2163L,
                                'zoom': 0L}),
                              (loc('../../DeepLidar/train.py'),
                               {'attrib-starts': [('create_callbacks',
        121)],
                                'first-line': 116L,
                                'folded-linenos': [],
                                'sel-line': 128L,
                                'sel-line-start': 4725L,
                                'selection_end': 4745L,
                                'selection_start': 4745L,
                                'zoom': 0L}),
                              (loc('../config.yaml'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 5L,
                                'sel-line-start': 227L,
                                'selection_end': 242L,
                                'selection_start': 242L,
                                'zoom': 0L}),
                              (loc('../../keras-retinanet/keras_retinanet/preprocessing/generator.py'),
                               {'attrib-starts': [('Generator',
        38),
        ('Generator.compute_input_output',
         297)],
                                'first-line': 279L,
                                'folded-linenos': [],
                                'sel-line': 317L,
                                'sel-line-start': 12987L,
                                'selection_end': 13025L,
                                'selection_start': 13010L,
                                'zoom': 0L}),
                              (loc('preprocess.py'),
                               {'attrib-starts': [('resize_image',
        5)],
                                'first-line': 14L,
                                'folded-linenos': [],
                                'sel-line': 19L,
                                'sel-line-start': 556L,
                                'selection_end': 570L,
                                'selection_start': 570L,
                                'zoom': 0L}),
                              (loc('../../keras-retinanet/keras_retinanet/utils/image.py'),
                               {'attrib-starts': [('preprocess_image',
        34)],
                                'first-line': 29L,
                                'folded-linenos': [],
                                'sel-line': 34L,
                                'sel-line-start': 922L,
                                'selection_end': 1875L,
                                'selection_start': 922L,
                                'zoom': 0L}),
                              (loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/numpy/core/shape_base.py'),
                               {'attrib-starts': [('block',
        669)],
                                'first-line': 673L,
                                'folded-linenos': [],
                                'sel-line': 684L,
                                'sel-line-start': 21326L,
                                'selection_end': 21340L,
                                'selection_start': 21337L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('visualization.py'),
         loc('utils.py'),
         loc('callback.py'),
         loc('../train.py'),
         loc('Generator.py'),
         loc('models/random.py'),
         loc('models/resnet.py'),
         loc('../../DeepLidar/train.py'),
         loc('../config.yaml'),
         loc('../../keras-retinanet/keras_retinanet/preprocessing/generator.py'),
         loc('preprocess.py'),
         loc('../../keras-retinanet/keras_retinanet/utils/image.py'),
         loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/numpy/core/shape_base.py')]),
                               'open_files': [u'callback.py',
        u'models/random.py',
        u'utils.py',
        u'visualization.py',
        u'../../DeepLidar/train.py',
        u'../config.yaml',
        u'../../keras-retinanet/keras_retinanet/utils/image.py',
        u'preprocess.py',
        u'models/resnet.py',
        u'../../keras-retinanet/keras_retinanet/preprocessing/generator.py',
        u'../train.py',
        u'Generator.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (10,
                         23,
                         1365,
                         877)}]}
guimgr.recent-documents = [loc('Generator.py'),
                           loc('../train.py'),
                           loc('../../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/numpy/core/shape_base.py'),
                           loc('../../keras-retinanet/keras_retinanet/preprocessing/generator.py'),
                           loc('models/resnet.py'),
                           loc('preprocess.py'),
                           loc('../../keras-retinanet/keras_retinanet/utils/image.py'),
                           loc('../config.yaml'),
                           loc('../../DeepLidar/train.py'),
                           loc('visualization.py'),
                           loc('utils.py'),
                           loc('models/random.py'),
                           loc('callback.py')]
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('custom',
                        [u'PYTHONPATH=""'])}
proj.pyexec = {None: ('custom',
                      u'/Users/ben/miniconda3/envs/DeepTrap/bin/python')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.replace-history = [u'image_dict',
                          u'data']
search.search-history = [u'categorical',
                         u'num_classes',
                         u'load_ann',
                         u'load_annotations',
                         u'preprocess',
                         u'resize',
                         u'batch_size',
                         u'load_image_group',
                         u'get_item',
                         u'categ',
                         u'np',
                         u'validation_generator',
                         u'validation ge',
                         u'fit',
                         u'check',
                         u'training_dict',
                         u'\\n',
                         u'train_df']
testing.stored-results = (1,
                          [],
                          {})
