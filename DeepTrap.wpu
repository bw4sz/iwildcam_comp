#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('DeepTrap/BackgroundSubtraction.py'): {94L: (0,
        None,
        1,
        0),
        199L: (0,
               None,
               1,
               0)}}
debug.err-values = {loc('../DeepMeerkat/training/Classification/pipeline.py'): {},
                    loc('train.py'): {}}
debug.exceptions-ignored = {loc('../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/keras/utils/data_utils.py'): {401: True}}
debug.recent-run-args = {loc('../DeepMeerkat/DeepMeerkat/Meerkat.py'): [u'--training',
        u'--training_mode',
        u'--input "asdasd.avi"',
        u'--threaded',
        u'--threaded --i /Users/ben/Dropbox/HummingbirdProject/Completed_Frames/Sachatamia/foundframes/201710',
        u' --i /Users/ben/Dropbox/HummingbirdProject/Completed_Frames/Sachatamia/foundframes/201710',
        u'--threaded /--i Users/ben/Dropbox/HummingbirdProject/Completed_Frames/Sachatamia/foundframes/201710',
        u'--threaded /--i Users/ben/Dropbox/HummingbirdProject/Data/Sachatamia/foundframes/201710'],
                         loc('../DeepMeerkat/DeepMeerkat/main.py'): [u'--threaded'],
                         loc('../DeepMeerkat/training/Classification/Training.sh'): [u'--train_input_path Samples/Training/trainingdata.csv \n--eval_input_path Samples/Testing/testingdata.csv\n--input_dict Samples/dict.txt\n--output_dir Output'],
                         loc('../DeepMeerkat/training/Classification/pipeline.py'): [u'    --train_input_path Samples/Training/trainingdata.csv \n    --eval_input_path Samples/Testing/testingdata.csv\n    --input_dict Samples/dict.txt\n    --output_dir Output/'],
                         loc('../DeepMeerkat/training/Classification/trainer/preprocess.py'): [u'--input_path /Users/ben/Documents/DeepMeerkat/training/Classification/Samples/Training/trainingdata.csv --input_dict /Users/ben/Documents/DeepMeerkat/training/Classification/Samples/dict.txt --output_path Output',
        u'--input_path Samples/Training/trainingdata.csv --input_dict /Users/ben/Documents/DeepMeerkat/training/Classification/Samples/dict.txt --output_path Output',
        u'--input_path /Users/ben/Documents/DeepMeerkat/training/Classification/Samples/Training/trainingdata.csv --input_dict /Users/ben/Documents/DeepMeerkat/training/Classification/Samples/dict.txt --output_path /Users/ben/Documents/DeepMeerkat/training/Classification/Output',
        u'--input_path Samples/Training/trainingdata.csv --input_dict Samples/dict.txt --output_path Output',
        u'--input_path Samples/Training/trainingdata.csv --input_dict Samples/dict.txt',
        u'--input_path Samples/Training/trainingdata.csv\n\n--input_dict Samples/dict.txt',
        u'--input_path Samples/Training/trainingdata.csv\n--input_dict Samples/dict.txt',
        u'--input_path Samples/Training/trainingdata.csv ',
        u'Samples/Training/trainingdata.csv '],
                         loc('train.py'): [u'--debug']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'XJhyfDuUfSFS1sBEXYhXqlW2zq'\
        'uzgXJC',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.29340892983699507,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(3,)],
                                 'selected-nodes': [(3,
        2)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.5,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'scheduler',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'postprocess',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 1317L,
                       'folded-linenos': [],
                       'history': {u'file:/Users/ben/Documents/iwildcam_comp/DeepTrap/Locations.py': ['i'\
        'mage_data = locations[location][day_or_night]\n',
        'image_data = image_data.sort("date_captured")\n',
        'image_data = image_data.sort_values("date_captured")\n',
        'image_data.head()\n',
        'image_data.date_captured.head(10)\n',
        'os.getwd()\n',
        'cv2.imread(row.file_path)\n',
        'import os\n',
        'os.path.join(image_dir,"*.jpg")\n',
        'image_paths = glob.glob(os.path.join(image_dir,"*.jpg"))\n',
        'image_paths = glob.glob(os.path.join(image_dir,"*"))\n',
        'image_paths\n',
        'image_dir\n',
        'os.getcwd()\n',
        'glob.glob(os.path.join(image_dir,"*.jpg"))\n',
        'glob.glob(*)\n',
        'glob.glob("*")\n',
        'glob.glob("tests/*")\n',
        'row.file_path\n',
        'img = cv2.imread(row.file_path)\n',
        'img\n',
        'cv2.imshow("window",foreground)\ncv2.waitKey(0)\n\n',
        'img = cv2.imread(row.file_path)\ncv2.imshow("window",img)\ncv2.wait'\
        'Key(0)\n\n',
        'import matplotlib.pyplot as plt\n',
        'fig = plt.figure()\nplt.subplot(221)\nplt.imshow(img)\nplt.subplot('\
        '222)\nplt.imshow(foreground)\n\n',
        '(image_data.file_path\n',
        'mage_data.file_path.loc[0]\n',
        'image_data.file_path.loc[0]\n',
        'image_data.file_path.loc\n',
        'image_data.file_path.loc(0)\n',
        'image_data.file_path\n',
        'image_data.file_path[0]\n',
        'image_data.file_path[1]\n',
        'image_data.file_path[2]\n',
        'image_data.file_path.iloc\n',
        'image_data.file_path.iloc(1)\n',
        'image_data.file_path.iloc(0)\n',
        'image_data.file_path.iloc[0]\n',
        'row\n',
        'row.seq\n',
        'image_data[image_data.seq_id == row.seq_id]\n',
        'len(image_data[image_data.seq_id == row.seq_id])\n',
        'id\n',
        'index\n',
        'image_data\n',
        'image_data.size()\n',
        'image_data.size\n',
        'image_data.shape\n',
        'image_data.shape[0]\n',
        'background\n',
        'bounding_box\n',
        'out = cv2.findContours(image, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_S'\
        'IMPLE )\n',
        'len(out)\n',
        'out\n',
        'contours,hierarchy = cv2.findContours(image, cv2.RETR_EXTERNAL, cv2'\
        '.CHAIN_APPROX_SIMPLE )\n',
        'contours = [contour for contour in contours if cv2.contourArea(cont'\
        'our) > 50]\n',
        'contours\n',
        'image\n',
        'type(boxes)\n',
        'BoundingBox\n',
        'len(boxes)\n',
        'len(boxes[0])\n',
        'boxes[0]\n',
        'type(boxes[0])\n',
        'boxes = self.find_bounding_box(threshold_image)\n',
        'boxes\n',
        'threshold_image = self.draw_box(threshold_image, boxes)\n',
        'threshold_image\n',
        'threshold_image.mean()\n',
        'threshold_image.max()\n',
        'threshold_image.shape\n'],
                                   u'file:/Users/ben/Documents/iwildcam_comp/train.py': ['t'\
        'rain_df.shape\n',
        'train_df.groupby("category_id").apply(lambda x: x.head(n=100)).shap'\
        'e\n',
        '1333/50\n',
        'traindf = train_df.groupby("category_id").apply(lambda x: x.head(n='\
        '100))\n',
        'train_generator = Generator(training_split, config=config, image_di'\
        'r=config["train_data_path"])\n',
        'evaluation_generator = Generator(evaluation_split, config=config, i'\
        'mage_dir=config["train_data_path"])\n',
        'len(evaluation_generator)\n',
        'train_generator.size()\n',
        'len(train_generator)\n',
        'config["batch_size"]\n',
        'self.generator.name\n',
        'self.generator.data\n',
        'self.generator.load_annotation(i)\n',
        'self.image_dict[16]\n',
        'self.image_dict[(16,35)]\n',
        'train_df.index\n',
        'train_df = train_df.groupby("category_id").apply(lambda x: x.head(n'\
        '=100)).re_index()\n',
        'train_df = train_df.groupby("category_id", as_index=False).apply(la'\
        'mbda x: x.head(n=100)).re_index()',
        'training_split, evaluation_split = utils.split_training(train_df, i'\
        'mage_dir=config["train_data_path"] )\n',
        'training_split.shape\n',
        'training_split.evaluation_split\n',
        'training_split.index\n',
        'self.image_dict\n',
        'self.image_dict.keys()\n',
        'i\n',
        'image_names = self.generator.image_dict.keys()\nkey = image_names[i'\
        ']\nground_truth.append(self.generator.load_annotation(key))\n\n',
        'self.generator.image_dict.keys()\n',
        'self.generator.image_dict.keys()[i]\n',
        'self.generator.image_dict.keys()[0]\n',
        'image_names = list(self.generator.image_dict.keys())\nkey = image_n'\
        'ames[i]\nground_truth.append(self.generator.load_annotation(key))\n'\
        '\n',
        'config["classification_model"]["gpu"] \n',
        'config["classification_model"]\n',
        'config\n',
        'self.generator.size\n',
        'len(self.generator)\n',
        'print("The shape of ground truth is {}, and the shape of prediction'\
        's is {}".format(ground_truth.shape,predictions.shape))\nprint("Ther'\
        'e are {} images in the data file".format(self.generator.data.shape['\
        '0]))\nprint("The generator length is {}".format(len(self.generator)'\
        '))\nprint("The generator size is {}".format(self.generator.size()))'\
        '\n\n',
        'predictions = self.model.predict_generator(self.generator)\n',
        'ground_truth\n',
        'ground_truth.shape\n',
        'predictions_batches\n',
        'predictions_batches.shape\n',
        'self.generator\n',
        'self.generator.size()\n',
        'predictions = predictions_batches[:self.generator.size(),:]\n',
        'predictions\n',
        'predictions.shape\n',
        'test_df\n',
        '#Create evaluation generator and predict\nvalidation_generator = Ge'\
        'nerator(test_df,\n                                 image_size=confi'\
        'g["classification_model"]["image_size"],\n                         '\
        '        batch_size=config["classification_model"]["batch_size"], \n'\
        '                                 image_dir=config["test_data_path"]'\
        ',training=False)\n#predict\npredictions = model.predict(validation_'\
        'generator)\n\n#View predictions\n#turn to classes from one-hot labe'\
        'l\npredictions = np.argmax(predictions, axis=1)\npredictions_label '\
        '= [utils.classes[x] for x in predictions]\n\nif mode.debug:\n    vi'\
        'sualization.plot_images(validation_generator, predictions=predictio'\
        'ns_label, n=2,annotations=False, show=False, experiment=experiment)'\
        '\nelse:\n    visualization.plot_images(validation_generator, predic'\
        'tions=predictions_label,n=50, annotations=False, show=False, experi'\
        'ment=experiment)\n\n']},
                       'launch-id': None,
                       'sel-line': 1330L,
                       'sel-line-start': 60926L,
                       'selection_end': 60926L,
                       'selection_start': 60926L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {None: ['#Read and log config file\nconfig'\
        ' = utils.read_config()\nexperiment.log_parameters(config)\n\n',
        'train_df.shape\n',
        'train_df.groupby("category_id").apply(lambda x: x.head(n=100)).shap'\
        'e\n',
        'import argparse\nimport numpy as np\nfrom datetime import datetime'\
        '\n\nfrom DeepTrap import utils\nfrom DeepTrap.models import resnet'\
        '\nfrom DeepTrap import evaluation, visualization, callback\nfrom De'\
        'epTrap.Generator import Generator\n\n',
        'training_split, evaluation_split = utils.split_training(train_df, i'\
        'mage_dir=config["train_data_path"] )\n',
        'train_generator = Generator(training_split, config=config, image_di'\
        'r=config["train_data_path"])\n',
        'evaluation_generator = Generator(evaluation_split, config=config, i'\
        'mage_dir=config["train_data_path"])\n',
        'train_generator.shape\n',
        'train_generator.data\n',
        'from DeepTrap import utils\nfrom DeepTrap.models import resnet\nfro'\
        'm DeepTrap import evaluation, visualization, callback\nfrom DeepTra'\
        'p.Generator import Generator\n\n',
        'config = utils.read_config()\n',
        'train_df = utils.read_train_data(image_dir=config["train_data_path"'\
        '], supp_data=False)\n',
        'traindf = train_df.groupby("category_id").apply(lambda x: x.head(n='\
        '100))\n',
        'test_df = utils.read_test_data(image_dir=config["test_data_path"])'\
        '\n',
        'training_split, evaluation_split = utils.split_training(train_df, i'\
        'mage_dir=config["train_data_path"] )\ntrain_generator = Generator(t'\
        'raining_split, config=config, image_dir=config["train_data_path"])'\
        '\nevaluation_generator = Generator(evaluation_split, config=config,'\
        ' image_dir=config["train_data_path"])\n\n',
        'train_generator.size()\n',
        'len(train_generator)\n',
        '190542/50\n',
        'traindf.shape\n',
        'generator.size()/generator.batch_size\n',
        '143/32\n',
        'int(143/32)\n',
        "train_df = pd.read_csv('/data/train.csv')\ntrain_df['file_path'] = "\
        "train_df['id'].apply(lambda x: os.path.join(config[\"train_data_pat"\
        "h\"], f'{x}.jpg'))\ntrain_df = utils.check_images(train_df, config["\
        "\"train_data_path\"])\n\n",
        'import pandas as pd\n',
        'import os\n',
        "train_df = pd.read_csv('../data/train.csv')\ntrain_df['file_path'] "\
        "= train_df['id'].apply(lambda x: os.path.join(config[\"train_data_p"\
        "ath\"], f'{x}.jpg'))\ntrain_df = utils.check_images(train_df, confi"\
        "g[\"train_data_path\"])\n\n",
        "train_df = pd.read_csv('data/train.csv')\ntrain_df['file_path'] = t"\
        "rain_df['id'].apply(lambda x: os.path.join(config[\"train_data_path"\
        "\"], f'{x}.jpg'))\ntrain_df = utils.check_images(train_df, config["\
        "\"train_data_path\"])\n\n",
        'from DeepTrap import utils\n',
        "train_df = pd.read_csv('data/train.csv')\n",
        'train_df.category_id\n',
        'train_df.group_by("seq_id").agg("sum")\n',
        'train_df.groupby("seq_id").nunique("category_id")\n',
        'train_df.groupby("seq_id").nunique("category_id")["category_id"]\n',
        'train_df.groupby("seq_id").agg({"count": lambda x x:x.nunique()}\n'\
        '\n',
        'train_df.groupby("seq_id").agg({"count": lambda x x:x.nunique()})\n',
        'train_df.groupby("seq_id").agg({"count": lambda x :x.nunique()})\n',
        'train_df.groupby("seq_id").agg({"count": lambda x: x.nunique()})\n',
        'train_df.groupby("seq_id").agg({"category_id": lambda x: x.nunique('\
        ')})\n',
        'a.head()\n',
        'a.category_id\n',
        'a.category_id.mean()\n',
        'len(a)\n',
        '686/147623\n',
        'b=a[a.category_id > 1].seq_in\n',
        'a[a.category_id > 1]\n',
        'a[a.category_id > 1].columns\n',
        'a[a.category_id > 1].index\n',
        'a[a.category_id > 1].index()\n',
        'b=a[a.category_id > 1].index\n',
        'train_df[train_df.seq_id.isin(b)]\n',
        'a=train_df.groupby("seq_id").agg({"category_id": lambda x: x.nuniqu'\
        'e()}).filter',
        'a=train_df.groupby("seq_id").agg({"category_id": lambda x: x.nuniqu'\
        'e()}).filter("category_id" > 1)\n',
        'a=train_df.groupby("seq_id").agg({"category_id": lambda x: x.nuniqu'\
        'e()})\n',
        'a=train_df["category_id"!=0].groupby("seq_id").agg({"category_id": '\
        'lambda x: x.nunique()})\n',
        'a=train_df[train_df["category_id"!=0]].groupby("seq_id").agg({"cate'\
        'gory_id": lambda x: x.nunique()})\n',
        'train_df[train_df["category_id"!=0]]\n',
        'train_df[train_df[~"category_id"=0]]\n',
        'train_df[train_df["category_id"=0]]\n',
        'train_df["category_id"==0]\n',
        'train_df[train_df.category_id==0]\n',
        'train_df[~train_df.category_id==0]\n',
        'train_df[!train_df.category_id=0]\n',
        'train_df[!train_df.category_id!=0]\n',
        'train_df[train_df.category_id!=0]\n',
        'train_df[train_df.category_id!=0].groupby("seq_id").agg({"category_'\
        'id": lambda x: x.nunique()})\n',
        'b=train_df[train_df.category_id!=0].groupby("seq_id").agg({"categor'\
        'y_id": lambda x: x.nunique()})\n',
        'b[b.category_id>1]\n',
        'b[b.category_id>1].count()\n',
        '40/train_df.shape[0]\n',
        'a=mean([7,8])\n',
        'import numpy as np\n',
        'np.mean([7,8])\n',
        'a=np.mean([7,8])\n',
        'np.mean([a,9])\n',
        'np.mean([7,8,8])\n',
        'np.mean([7,8,9])\n',
        'np.median([7,8,8])\n',
        'train_df.seq_id\n',
        'train_df.groupby("seq_id").nunique()\n',
        'train_df.groupby("seq_id").size()\n',
        'a=train_df.groupby("seq_id").size()\n',
        'a.seq_id\n',
        'a[0]\n',
        'sum(a)\n',
        'a.hist()\n',
        'a.table\n',
        'a.table()\n',
        'pd.crosstab(a)\n',
        'pd.crosstab(a,)\n',
        'a.columns\n',
        'a\n',
        'pd.crosstab(a,"count")\n',
        'wb = cv2.xphoto.createSimpleWB()\n',
        'import cv2\n',
        'cv2.xphoto\n']},
                       'launch-id': None,
                       'sel-line': 12L,
                       'sel-line-start': 528L,
                       'selection_end': 528L,
                       'selection_start': 528L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('DeepTrap/BackgroundSubtraction.py'),
        {'attrib-starts': [('BackgroundModel',
                            35)],
         'first-line': 179L,
         'folded-linenos': [],
         'sel-line': 183L,
         'sel-line-start': 6616L,
         'selection_end': 6645L,
         'selection_start': 6645L,
         'zoom': 0L},
        1556315014.612367],
        [loc('DeepTrap/Locations.py'),
         {'attrib-starts': [],
          'first-line': 32L,
          'folded-linenos': [],
          'sel-line': 35L,
          'sel-line-start': 865L,
          'selection_end': 902L,
          'selection_start': 902L,
          'zoom': 0L},
         1556315033.957601],
        [loc('DeepTrap/BackgroundSubtraction.py'),
         {'attrib-starts': [('BackgroundModel',
                             35),
                            ('BackgroundModel.run_sequence',
                             148)],
          'first-line': 158L,
          'folded-linenos': [],
          'sel-line': 172L,
          'sel-line-start': 6286L,
          'selection_end': 6302L,
          'selection_start': 6302L,
          'zoom': 0L},
         1556315052.766149],
        [loc('DeepTrap/Locations.py'),
         {'attrib-starts': [],
          'first-line': 32L,
          'folded-linenos': [],
          'sel-line': 35L,
          'sel-line-start': 865L,
          'selection_end': 902L,
          'selection_start': 902L,
          'zoom': 0L},
         1556315060.026442],
        [loc('DeepTrap/BackgroundSubtraction.py'),
         {'attrib-starts': [('BackgroundModel',
                             35),
                            ('BackgroundModel.run_sequence',
                             148)],
          'first-line': 158L,
          'folded-linenos': [],
          'sel-line': 171L,
          'sel-line-start': 6233L,
          'selection_end': 6291L,
          'selection_start': 6291L,
          'zoom': 0L},
         1556315076.507666],
        [loc('DeepTrap/Locations.py'),
         {'attrib-starts': [],
          'first-line': 32L,
          'folded-linenos': [],
          'sel-line': 35L,
          'sel-line-start': 865L,
          'selection_end': 902L,
          'selection_start': 902L,
          'zoom': 0L},
         1556315080.573563],
        [loc('DeepTrap/BackgroundSubtraction.py'),
         {'attrib-starts': [('BackgroundModel',
                             35),
                            ('BackgroundModel.draw_box',
                             195)],
          'first-line': 182L,
          'folded-linenos': [],
          'sel-line': 196L,
          'sel-line-start': 7034L,
          'selection_end': 7042L,
          'selection_start': 7042L,
          'zoom': 0L},
         1556315141.917819],
        [loc('DeepTrap/Locations.py'),
         {'attrib-starts': [],
          'first-line': 32L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 956L,
          'selection_end': 999L,
          'selection_start': 999L,
          'zoom': 0L},
         1556315185.909977],
        [loc('DeepTrap/BackgroundSubtraction.py'),
         {'attrib-starts': [('BackgroundModel',
                             35),
                            ('BackgroundModel.run_sequence',
                             148)],
          'first-line': 161L,
          'folded-linenos': [],
          'sel-line': 178L,
          'sel-line-start': 6538L,
          'selection_end': 6577L,
          'selection_start': 6577L,
          'zoom': 0L},
         1556315263.29102],
        [loc('DeepTrap/Locations.py'),
         {'attrib-starts': [],
          'first-line': 32L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 956L,
          'selection_end': 999L,
          'selection_start': 999L,
          'zoom': 0L},
         1556315269.734567],
        [loc('DeepTrap/BackgroundSubtraction.py'),
         {'attrib-starts': [('BackgroundModel',
                             35),
                            ('BackgroundModel.run_sequence',
                             148)],
          'first-line': 168L,
          'folded-linenos': [],
          'sel-line': 175L,
          'sel-line-start': 6420L,
          'selection_end': 6436L,
          'selection_start': 6436L,
          'zoom': 0L},
         1556315365.136064],
        [loc('DeepTrap/visualization.py'),
         {'attrib-starts': [('plot_images',
                             9)],
          'first-line': 29L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 1384L,
          'selection_end': 1413L,
          'selection_start': 1408L,
          'zoom': 0L},
         1556315366.46564],
        [loc('DeepTrap/BackgroundSubtraction.py'),
         {'attrib-starts': [('BackgroundModel',
                             35),
                            ('BackgroundModel.run_sequence',
                             148)],
          'first-line': 168L,
          'folded-linenos': [],
          'sel-line': 178L,
          'sel-line-start': 6538L,
          'selection_end': 6580L,
          'selection_start': 6580L,
          'zoom': 0L},
         1556315369.293876],
        [loc('DeepTrap/Locations.py'),
         {'attrib-starts': [],
          'first-line': 32L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 956L,
          'selection_end': 999L,
          'selection_start': 999L,
          'zoom': 0L},
         1556315373.015051],
        [loc('DeepTrap/BackgroundSubtraction.py'),
         {'attrib-starts': [('BackgroundModel',
                             35),
                            ('BackgroundModel.run_sequence',
                             148)],
          'first-line': 173L,
          'folded-linenos': [],
          'sel-line': 178L,
          'sel-line-start': 6538L,
          'selection_end': 6538L,
          'selection_start': 6538L,
          'zoom': 0L},
         1556315405.403852],
        [loc('train.py'),
         {'attrib-starts': [],
          'first-line': 24L,
          'folded-linenos': [],
          'sel-line': 76L,
          'sel-line-start': 2978L,
          'selection_end': 2978L,
          'selection_start': 2978L,
          'zoom': 0L},
         1556315406.124666],
        [loc('DeepTrap/Locations.py'),
         {'attrib-starts': [],
          'first-line': 32L,
          'folded-linenos': [],
          'sel-line': 47L,
          'sel-line-start': 1280L,
          'selection_end': 1288L,
          'selection_start': 1288L,
          'zoom': 0L},
         1556315489.608258],
        [loc('DeepTrap/BackgroundSubtraction.py'),
         {'attrib-starts': [('BackgroundModel',
                             35),
                            ('BackgroundModel.draw_box',
                             195)],
          'first-line': 190L,
          'folded-linenos': [],
          'sel-line': 201L,
          'sel-line-start': 7240L,
          'selection_end': 7252L,
          'selection_start': 7252L,
          'zoom': 0L},
         1556315582.352657],
        [loc('DeepTrap/Locations.py'),
         {'attrib-starts': [],
          'first-line': 32L,
          'folded-linenos': [],
          'sel-line': 47L,
          'sel-line-start': 1280L,
          'selection_end': 1288L,
          'selection_start': 1288L,
          'zoom': 0L},
         1556315594.107342],
        [loc('DeepTrap/BackgroundSubtraction.py'),
         {'attrib-starts': [('BackgroundModel',
                             35),
                            ('BackgroundModel.cluster_bounding_boxes',
                             106)],
          'first-line': 112L,
          'folded-linenos': [],
          'sel-line': 123L,
          'sel-line-start': 4392L,
          'selection_end': 4454L,
          'selection_start': 4454L,
          'zoom': 0L},
         1556315910.611242]],
        20),
        'current-loc': loc('DeepTrap/Locations.py'),
        'editor-state-list': [(loc('train.py'),
                               {'attrib-starts': [],
                                'first-line': 24L,
                                'folded-linenos': [],
                                'sel-line': 76L,
                                'sel-line-start': 2978L,
                                'selection_end': 2978L,
                                'selection_start': 2978L,
                                'zoom': 0L}),
                              (loc('DeepTrap/Locations.py'),
                               {'attrib-starts': [],
                                'first-line': 32L,
                                'folded-linenos': [],
                                'sel-line': 47L,
                                'sel-line-start': 1280L,
                                'selection_end': 1288L,
                                'selection_start': 1288L,
                                'zoom': 0L}),
                              (loc('DeepTrap/visualization.py'),
                               {'attrib-starts': [('plot_images',
        9)],
                                'first-line': 29L,
                                'folded-linenos': [],
                                'sel-line': 38L,
                                'sel-line-start': 1384L,
                                'selection_end': 1413L,
                                'selection_start': 1408L,
                                'zoom': 0L}),
                              (loc('DeepTrap/BackgroundSubtraction.py'),
                               {'attrib-starts': [('BackgroundModel',
        35),
        ('BackgroundModel.cluster_bounding_boxes',
         106)],
                                'first-line': 112L,
                                'folded-linenos': [],
                                'sel-line': 123L,
                                'sel-line-start': 4392L,
                                'selection_end': 4454L,
                                'selection_start': 4454L,
                                'zoom': 0L}),
                              (loc('DeepTrap/callback.py'),
                               {'attrib-starts': [('Evaluate',
        6),
        ('Evaluate.on_epoch_end',
         18)],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 38L,
                                'sel-line-start': 1354L,
                                'selection_end': 1362L,
                                'selection_start': 1362L,
                                'zoom': 0L}),
                              (loc('../DeepMeerkat/DeepMeerkat/Video.py'),
                               {'attrib-starts': [('Video',
        13),
        ('Video.cluster_bounding_boxes',
         252)],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 259L,
                                'sel-line-start': 9596L,
                                'selection_end': 9655L,
                                'selection_start': 9651L,
                                'zoom': 0L}),
                              (loc('DeepTrap/Geometry.py'),
                               {'attrib-starts': [],
                                'first-line': 117L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('train.py'),
         loc('DeepTrap/Locations.py'),
         loc('DeepTrap/visualization.py'),
         loc('DeepTrap/BackgroundSubtraction.py'),
         loc('DeepTrap/callback.py'),
         loc('../DeepMeerkat/DeepMeerkat/Video.py'),
         loc('DeepTrap/Geometry.py')]),
                               'open_files': [u'DeepTrap/callback.py',
        u'../DeepMeerkat/DeepMeerkat/Video.py',
        u'DeepTrap/Geometry.py',
        u'DeepTrap/visualization.py',
        u'train.py',
        u'DeepTrap/BackgroundSubtraction.py',
        u'DeepTrap/Locations.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5060606060606061},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (0,
                         23,
                         1418,
                         877)}]}
guimgr.recent-documents = [loc('DeepTrap/Locations.py'),
                           loc('DeepTrap/BackgroundSubtraction.py'),
                           loc('train.py'),
                           loc('DeepTrap/visualization.py'),
                           loc('../DeepMeerkat/DeepMeerkat/Video.py'),
                           loc('DeepTrap/callback.py')]
guimgr.visual-state = {loc('../../../../Library/Python/2.7/site-packages/joblib/_parallel_backends.py'): {'a'\
        'ttrib-starts': [('SafeFunction',
                          337),
                         ('SafeFunction.__call__',
                          347)],
        'first-line': 343L,
        'folded-linenos': [],
        'sel-line': 358L,
        'sel-line-start': 14184L,
        'selection_end': 14184L,
        'selection_start': 14184L,
        'zoom': 0L},
                       loc('../../../../System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/multiprocessing/pool.py'): {'a'\
        'ttrib-starts': [('mapstar',
                          63)],
        'first-line': 103L,
        'folded-linenos': [],
        'sel-line': 64L,
        'sel-line-start': 1995L,
        'selection_end': 1995L,
        'selection_start': 1995L,
        'zoom': 0L},
                       loc('../../../../System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py'): {'a'\
        'ttrib-starts': [('Thread',
                          639),
                         ('Thread.run',
                          751)],
        'first-line': 736L,
        'folded-linenos': [],
        'sel-line': 762L,
        'sel-line-start': 27090L,
        'selection_end': 27090L,
        'selection_start': 27090L,
        'zoom': 0L},
                       loc('../DeepForest/.travis.yml'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 11L,
        'sel-line-start': 248L,
        'selection_end': 270L,
        'selection_start': 270L,
        'zoom': 0L},
                       loc('../DeepForest/DeepForest/SubmitEvaluation.sh'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 142L,
        'selection_end': 161L,
        'selection_start': 161L,
        'zoom': 0L},
                       loc('../DeepForest/DeepForest/fpclib/fpclib/crownSegmenter.py'): {'a'\
        'ttrib-starts': [('smoothenGridDSM',
                          20),
                         ('smoothenGridDSM.averageNeighbors',
                          23)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 521L,
        'selection_end': 532L,
        'selection_start': 532L,
        'zoom': 0L},
                       loc('../DeepForest/DeepForest/fpclib/fpclib/forest.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 226L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../DeepForest/DeepForest/fpclib/fpclib/geometry.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 229L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../DeepForest/DeepForest/fpclib/fpclib/util.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../DeepForest/HPC/StartDask.py'): {'attrib-start'\
        's': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 511L,
        'selection_end': 511L,
        'selection_start': 511L,
        'zoom': 0L},
                       loc('../DeepMeerkat/DeepMeerkat/Meerkat.py'): {'attri'\
        'b-starts': [],
        'first-line': 79L,
        'folded-linenos': [],
        'sel-line': 91L,
        'sel-line-start': 2929L,
        'selection_end': 2992L,
        'selection_start': 2988L,
        'zoom': 0L},
                       loc('../DeepMeerkat/DeepMeerkat/Video.py'): {'attrib-'\
        'starts': [('Video',
                    13),
                   ('Video.cluster_bounding_boxes',
                    252)],
        'first-line': 249L,
        'folded-linenos': [],
        'sel-line': 254L,
        'sel-line-start': 9374L,
        'selection_end': 9468L,
        'selection_start': 9374L,
        'zoom': 0L},
                       loc('../DeepMeerkat/StartCloudDataFlow.sh'): {'attrib'\
        '-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 226L,
        'selection_end': 253L,
        'selection_start': 253L,
        'zoom': 0L},
                       loc('../DeepMeerkat/run_clouddataflow.py'): {'attrib-'\
        'starts': [('PredictDoFn',
                    9),
                   ('PredictDoFn.process',
                    14)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 542L,
        'selection_end': 563L,
        'selection_start': 563L,
        'zoom': 0L},
                       loc('../DeepMeerkat/training/Classification/Training.sh'): {'a'\
        'ttrib-starts': [],
        'first-line': 16L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 835L,
        'selection_end': 847L,
        'selection_start': 847L,
        'zoom': 0L},
                       loc('../DeepMeerkat/training/Classification/sample_photos.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 5L,
        'folded-linenos': [],
        'sel-line': 23L,
        'sel-line-start': 664L,
        'selection_end': 737L,
        'selection_start': 737L,
        'zoom': 0L},
                       loc('../DeepMeerkat/training/Classification/trainer/model.py'): {'a'\
        'ttrib-starts': [('Model',
                          100),
                         ('Model.build_inception_graph',
                          142)],
        'first-line': 136L,
        'folded-linenos': [],
        'sel-line': 149L,
        'sel-line-start': 5316L,
        'selection_end': 5348L,
        'selection_start': 5348L,
        'zoom': 0L},
                       loc('../ExploringDeepMeerkat/Appendix1.md'): {'attrib'\
        '-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../WhalePhys/Cloud/Startup.sh'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 249L,
        'selection_end': 249L,
        'selection_start': 249L,
        'zoom': 0L},
                       loc('../dask-jobqueue/dask_jobqueue/core.py'): {'attr'\
        'ib-starts': [('JobQueueCluster',
                       16),
                      ('JobQueueCluster.adapt',
                       130)],
        'first-line': 120L,
        'folded-linenos': [],
        'sel-line': 131L,
        'sel-line-start': 3878L,
        'selection_end': 3883L,
        'selection_start': 3883L,
        'zoom': 0L},
                       loc('../dask-jobqueue/dask_jobqueue/slurm.py'): {'att'\
        'rib-starts': [('SLURMCluster',
                        15),
                       ('SLURMCluster.__init__',
                        32)],
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 53L,
        'sel-line-start': 1406L,
        'selection_end': 1434L,
        'selection_start': 1434L,
        'zoom': 0L},
                       loc('../dask-jobqueue/dask_jobqueue/test_slurm.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../dask-jobqueue/test_slurm.py'): {'attrib-start'\
        's': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 187L,
        'selection_end': 187L,
        'selection_start': 187L,
        'zoom': 0L},
                       loc('DeepTrap/BackgroundSubtraction.py'): {'attrib-st'\
        'arts': [('BackgroundModel',
                  32),
                 ('BackgroundModel.apply',
                  47)],
        'first-line': 41L,
        'folded-linenos': [],
        'sel-line': 53L,
        'sel-line-start': 1712L,
        'selection_end': 1779L,
        'selection_start': 1779L,
        'zoom': 0L},
                       loc('DeepTrap/Generator.py'): {'attrib-starts': [('Ge'\
        'nerator',
        13),
        ('Generator.plot_image',
         137)],
        'first-line': 130L,
        'folded-linenos': [],
        'sel-line': 140L,
        'sel-line-start': 4261L,
        'selection_end': 4299L,
        'selection_start': 4299L,
        'zoom': 0L},
                       loc('DeepTrap/Locations.py'): {'attrib-starts': [],
        'first-line': 64L,
        'folded-linenos': [],
        'sel-line': 76L,
        'sel-line-start': 2311L,
        'selection_end': 2362L,
        'selection_start': 2362L,
        'zoom': 0L},
                       loc('DeepTrap/__init__.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('DeepTrap/callback.py'): {'attrib-starts': [('Eva'\
        'luate',
        6),
        ('Evaluate.on_epoch_end',
         18)],
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 27L,
        'sel-line-start': 862L,
        'selection_end': 959L,
        'selection_start': 862L,
        'zoom': 0L},
                       loc('DeepTrap/models/mobilenet.py'): {'attrib-starts': [('M'\
        'odel',
        13),
        ('Model.train',
         18)],
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 671L,
        'selection_end': 708L,
        'selection_start': 693L,
        'zoom': 0L},
                       loc('DeepTrap/models/resnet.py'): {'attrib-starts': [('M'\
        'odel',
        8),
        ('Model.predict',
         70)],
        'first-line': 67L,
        'folded-linenos': [],
        'sel-line': 71L,
        'sel-line-start': 2793L,
        'selection_end': 2801L,
        'selection_start': 2801L,
        'zoom': 0L},
                       loc('DeepTrap/preprocess.py'): {'attrib-starts': [],
        'first-line': 1L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 49L,
        'selection_end': 49L,
        'selection_start': 49L,
        'zoom': 0L},
                       loc('DeepTrap/utils.py'): {'attrib-starts': [('check_'\
        'images',
        12)],
        'first-line': 7L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 718L,
        'selection_end': 722L,
        'selection_start': 722L,
        'zoom': 0L},
                       loc('DeepTrap/visualization.py'): {'attrib-starts': [('p'\
        'lot_images',
        9)],
        'first-line': 40L,
        'folded-linenos': [],
        'sel-line': 33L,
        'sel-line-start': 1229L,
        'selection_end': 1264L,
        'selection_start': 1264L,
        'zoom': 0L},
                       loc('HPC/submit_training.sh'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 89L,
        'selection_end': 99L,
        'selection_start': 99L,
        'zoom': 0L},
                       loc('config.yaml'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 325L,
        'selection_end': 342L,
        'selection_start': 342L,
        'zoom': 0L},
                       loc('download_sample_data.py'): {'attrib-starts': [],
        'first-line': 33L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 1454L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/download_sample_location.py'): {'attrib-st'\
        'arts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 38L,
        'selection_end': 57L,
        'selection_start': 57L,
        'zoom': 0L},
                       loc('train.py'): {'attrib-starts': [],
        'first-line': 68L,
        'folded-linenos': [],
        'sel-line': 77L,
        'sel-line-start': 3038L,
        'selection_end': 3038L,
        'selection_start': 3038L,
        'zoom': 0L},
                       loc('untitled-6.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../macrosystems/DeepForest/DeepForest/SubmitKeras.sh'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 336L,
        'selection_end': 362L,
        'selection_start': 362L,
        'zoom': 0L},
                       loc('../macrosystems/DeepForest/DeepForest/SubmitRVis.sh'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../macrosystems/DeepForest/RunJob.sh'): {'attrib'\
        '-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 330L,
        'selection_end': 330L,
        'selection_start': 330L,
        'zoom': 0L},
                       loc('../macrosystems/DeepForest/SubmitLidar.sh'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 42L,
        'selection_end': 65L,
        'selection_start': 65L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/keras/utils/data_utils.py'): {'a'\
        'ttrib-starts': [('get_index',
                          386)],
        'first-line': 388L,
        'folded-linenos': [],
        'sel-line': 400L,
        'sel-line-start': 13745L,
        'selection_end': 13745L,
        'selection_start': 13745L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame',
                          97),
                         ('NDFrame.sample',
                          4704)],
        'first-line': 4457L,
        'folded-linenos': [],
        'sel-line': 4838L,
        'sel-line-start': 171912L,
        'selection_end': 171912L,
        'selection_start': 171912L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepTrap/lib/python3.7/site-packages/pandas/core/internals/construction.py'): {'a'\
        'ttrib-starts': [('sanitize_index',
                          508)],
        'first-line': 506L,
        'folded-linenos': [],
        'sel-line': 515L,
        'sel-line-start': 17727L,
        'selection_end': 17746L,
        'selection_start': 17746L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepTrap/lib/python3.7/threading.py'): {'a'\
        'ttrib-starts': [('Thread',
                          738),
                         ('Thread._bootstrap',
                          870)],
        'first-line': 879L,
        'folded-linenos': [],
        'sel-line': 886L,
        'sel-line-start': 31295L,
        'selection_end': 31342L,
        'selection_start': 31342L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('custom',
                        [u'PYTHONPATH=""'])}
proj.pyexec = {None: ('custom',
                      u'/Users/ben/miniconda3/envs/DeepTrap/bin/python')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'postprocess',
                         u'draw',
                         u'draw_box',
                         u'Rect',
                         u'get_parent_bounding_box',
                         u'cluster_',
                         u'draw_bpx',
                         u'post',
                         u'find_conto',
                         u'find_bounding_box',
                         u'find_con',
                         u'find',
                         u'load_image',
                         u'shapely',
                         u'cont',
                         u'get_con',
                         u'wb',
                         u'run_se',
                         u'plot_sequence',
                         u'split_sequences']
testing.stored-results = (1,
                          [],
                          {})
